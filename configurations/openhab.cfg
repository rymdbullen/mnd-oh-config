#################### Notify my Android (NAM) Action configuration #####################
#
# The timeout for the communication with the NMA service (optional, defaults
# to 10000 milliseconds)
#nma:timeout=

# If you have a developerKey from NMA you can set it here, but this completely optional
#nma:developerKey=

# The default api key to send messages to. Api keys can be created in your accounts dashboard.
#nma:apiKey=

# The application name which NMA will show (optional, defaults to 'openHAB').
#nma:appName=

# The priority to use for messages if not specified otherwise. Can range from
# -2 (lowest) to 2 (highest)
#nma:defaultPriority=

# The URL to attach to NMA messages by default  if not specified otherwise. Can be left empty.
#nma:defaultUrl=


################################# MQTT Persistence #########################################
#
# Name of the broker as defined in the section MQTT Transport
# mqtt-persistence:broker=

# The MQTT topic to which the persistence messages should be sent.
# mqtt-persistence:topic=

# A string representing the persistence message content.
# mqtt-persistence:message=


#######################################################################################
#####                       Transport configurations                              #####
#######################################################################################

################################# MQTT Transport ######################################
#
# Define your MQTT broker connections here for use in the MQTT Binding or MQTT
# Persistence bundles. Replace <broker> with a id you choose.
#

# URL to the MQTT broker, e.g. tcp://localhost:1883 or ssl://localhost:8883
#mqtt:<broker>.url=tcp://<host>:1883

# Optional. Client id (max 23 chars) to use when connecting to the broker.
# If not provided a default one is generated.
#mqtt:<broker>.clientId=<clientId>

# Optional. User id to authenticate with the broker.
# mqtt:<broker>.user=<user>

# Optional. Password to authenticate with the broker.
#mqtt:<broker>.pwd=<password>

# Optional. Set the quality of service level for sending messages to this broker. 
# Possible values are 0 (Deliver at most once),1 (Deliver at least once) or 2 
# (Deliver exactly once). Defaults to 0.
#mqtt:<broker>.qos=<qos>

# Optional. True or false. Defines if the broker should retain the messages sent to
# it. Defaults to false.
#mqtt:<broker>.retain=<retain>

# Optional. True or false. Defines if messages are published asynchronously or
# synchronously. Defaults to true.
#mqtt:<broker>.async=<async>

# Optional. Defines the last will and testament that is sent when this client goes offline
# Format: topic:message:qos:retained <br/>
#mqtt:<broker>.lwt=<last will definition>



#######################################################################################
#####                        Binding configurations                               #####
#######################################################################################

########################### NetworkHealth Binding #####################################
#
# Default timeout in milliseconds if none is specified in binding configuration
# (optional, default to 5000)
#networkhealth:timeout=

# refresh interval in milliseconds (optional, default to 60000)
#networkhealth:refresh=

################################ MPD Binding ##########################################
#
# Host and port of the first MPD to control 
# mpd:<player-id-1>.host=
# mpd:<player-id-1>.port=

# The password to authenticate against the MPD server (optional, can be null to
# indicate that no authentication is required)
# mpd:<player-id-1>.password=

# Host and port of the second MPD to control 
# mpd:<player-id-2>.host=
# mpd:<player-id-2>.port=

# The password to authenticate against the MPD server (optional, can be null to
# indicate that no authentication is required)
# mpd:<player-id-2>.password=



############################### Philips Hue Binding ###################################
#
# IP address of Hue Bridge (optional, default is auto-discovery)
hue:ip=@@HUE_IP@@

# Default secret key for the pairing of the Philips Hue Bridge.
# It has to be between 10-40 (alphanumeric) characters 
# This may be changed by the user for security reasons.
hue:secret=@@HUE_SECRET@@
hue:refresh=60000

######################## XBMC Binding ###########################

# Hostname / IP address of your XBMC host
xbmc:living.host=@@XBMC_HOST@@

# Port number for the json rpc service (optional, defaults to 8080)
xbmc:living.rsPort=8080

# Port number for the web socket service (optional, defaults to 9090)
xbmc:living.wsPort=9090

# Username to connect to XBMC. (optional, defaults to none)
xbmc:living.username=@@XBMC_USERNAME@@

# Password to connect to XBMC. (optional, defaults to none)
xbmc:living.password=@@XBMC_PASSWORD@@


################################ RFXCOM Binding #######################################
#
# Serial port of RFXCOM interface
# Valid values are e.g. COM1 for Windows and /dev/ttyS0 or /dev/ttyUSB0 for Linux
#rfxcom:serialPort=

# Set mode command for controller (optional)
# E.g. rfxcom:setMode=0D000000035300000C2F00000000 
#rfxcom:setMode=


################################ Sonos Binding ########################################
#
# Host and port of the first VDR to control 
sonos:living.udn=@@SONOS_LIVING_UDN@@
sonos:pollingPeriod=2000



############################### Systeminfo Binding ####################################
#
# Interval in milliseconds when to find new refresh candidates
# (optional, defaults to 1000)
#systeminfo:granularity=

# Data Storage Unit, where B=Bytes, K=kB, M=MB, T=TB (optional, defaults to M)
#systeminfo:units=


################################ Z-Wave  Binding ######################################
#
# The Z-Wave controller port. Valid values are e.g. COM1 for Windows and /dev/ttyS0 or
# /dev/ttyUSB0 for Linux
zwave:port=@@ZWAVE_PORT@@

# Z-Wave nightly heal time. This is the hour (eg 2AM) at which the automatic nightly
# network heal will be performed.
#zwave:healtime=2


################################# Mqttitude Binding ###################################
#
# Mqttitude can track your presence in two ways;
#
#  1. Regions - by defining a region in your Mqttitude app (on your phone) you specify
#               a set of lat/lon coordinates, a geofence, and a name - by using this name 
# 				in your item binding openHAB will listen for enter/leave events for this 
#               region and thus allow you to track your presence in multiple locations
#  2. Home    - by defining the lat/lon of your home, along with a geofence radius (below), 
#               the binding will listen for location publishes from the Mqttitude app and 
#               manually calculate the distance from your 'home'
#
# Optional. The latitude/longitude coordinates of 'home'. 
#mqttitude:home.lat=
#mqttitude:home.lon=

# Optional. The geofence radius.
#mqttitude:geofence=

############################### OpenPaths Binding #####################################
#
# The latitude/longitude coordinates of 'home'.
#openpaths:home.lat=
#openpaths:home.long

# Interval in milliseconds to poll for user location (optional, defaults to 5mins).
#openpaths:refresh=

# Distance in metres a user must be from 'home' to be considered inside the 
# geofence (optional, defaults to 100m). 
#openpaths:geofence=

# OpenPaths access/secret keys for each user.
#openpaths:<name>.accesskey=<accesskey>
#openpaths:<name>.secretkey=<secretkey>

